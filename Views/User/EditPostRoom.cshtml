@using HoiTroWebsite.Models
@model HoiTroWebsite.UserModels.PostRoomVM

@{
    ViewBag.Title = "Đăng tin mới";

    string ten_lien_he = "";
    string phone = "";

    if (Session["User"] != null)
    {
        ten_lien_he = (Session["User"] as Account).name;
        phone = (Session["User"] as Account).phoneNum;
    }
}


@section header
{
    @*jquery UI*@
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.14.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.14.1/jquery-ui.min.js" integrity="sha256-AlTido85uXPlSyyaZNsjJXeCs07eSv3r43kyCVc8ChI=" crossorigin="anonymous"></script>

    @*jquery slect2*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />

    <!-- CSS của Dropzone -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/dropzone@5.9.3/dist/min/dropzone.min.css" />

    <!-- JavaScript của Dropzone -->
    <script src="https://cdn.jsdelivr.net/npm/dropzone@5.9.3/dist/min/dropzone.min.js"></script>

    <!-- Thêm CDN cho SweetAlert -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
}


}

@using (Html.BeginForm("EditPostRoom", "User", FormMethod.Post, new { @id = "from_dangtin", enctype = "multipart/form-data" }))
{
    <input type="submit" value="Test submit" />
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-12">
                    <h3>Địa chỉ cho thuê</h3>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="province_id" class="control-label">Tỉnh/Thành phố</label>
                        <select id="province_id" name="province_id" class="form-control" tabindex="-1">
                            <option value="">-- Chưa chọn tỉnh/thành phố --</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label control-label" for="district_id">Quận/Huyện</label>
                        <select name="district_id" id="district_id" class="form-control" tabindex="-1" aria-hidden="true">
                            <option value="">Chọn quận huyện</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="control-label" for="phuongxa">Phường/Xã</label>
                        <select class="form-control" name="phuongxa" id="phuongxa" tabindex="-1">
                            <option value="">Chọn phường xã</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="sonha_duong" class="control-label">Số nhà, đường</label>
                        <input type="text" class="form-control" name="sonha_duong" id="sonha_duong" value="">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.dia_chi, "Địa chỉ chính xác", new { @class = "control-label" })
                        <!--<input type="text" readonly="" class="form-control" name="dia_chi" id="diachi"--> @*required=""*@<!-->-->
                        @Html.TextBoxFor(model => model.dia_chi, new { @class = "form-control", @readonly = "" })
                    </div>
                </div>
            </div>
            <div class="form-group row mt-5">
                <div class="col-md-12">
                    <h3>Thông tin mô tả</h3>
                </div>
            </div>
            <div class="form-group row mt-3">
                @Html.LabelFor(model => model.loai_chuyen_muc, "Loại chuyên mục", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    @Html.DropDownListFor(model => model.loai_chuyen_muc, null, "-- Chọn loại chuyên mục --", new { @class = "form-control", @readonly = "", @disabled = "" })
                    @Html.ValidationMessageFor(model => model.loai_chuyen_muc)
                </div>
            </div>
            <div class="form-group row">
                @*<label for="post_title" class="col-md-12 control-label">Tiêu đề</label>*@
                @Html.LabelFor(model => model.tieu_de, "Tiêu đề", new { @class = "col-md-12 control-label" })
                <div class="col-md-12">
                    @Html.TextBoxFor(model => model.tieu_de, new { @class = "form-control" })
                    @*<input type="text" class="form-control js-title" name="tieu_de" id="post_title" value="" minlength="30" maxlength="120" data-msg-required="Tiêu đề không được để trống" data-msg-minlength="Tiêu đề quá ngắn" data-msg-maxlength="Tiêu đề quá dài">*@
                    <input type="hidden" name="tieu_de_meta" meta-content />
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.noi_dung, "Nội dung mô tả", new { @class = "col-md-12 control-label" })
                @Html.ValidationMessageFor(model => model.noi_dung)
                <div class="col-md-12">
                    @Html.TextAreaFor(model => model.noi_dung, new { @class = "form-control", @id = "post_content", @rows = "10" })
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.ten_lien_he, "Họ tên", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    <div class="input-group mb-3">
                        @Html.TextBoxFor(model => model.ten_lien_he, new { @class = "form-control", @readonly = "readonly", @value = ten_lien_he })
                    </div>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.phone, "Số điện thoại", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    <div class="input-group mb-3">
                        @Html.TextBoxFor(model => model.phone, new { @class = "form-control", @readonly = "readonly", @value = phone })
                    </div>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.gia, "Giá cho thuê", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    <div class="input-group">
                        @Html.TextBoxFor(model => model.gia, new { @class = "form-control", @id = "giachothue", @pattern = "[0-9.]+" })<span class="form-control">đồng/tháng</span><br />
                        @Html.ValidationMessageFor(model => model.gia)
                    </div>
                    <small class="form-text text-muted">Nhập đầy đủ số, ví dụ 1 triệu thì nhập là 1000000</small>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.dien_tich, "Diện tích", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    <div class="input-group mb-3">
                        @Html.TextBoxFor(model => model.dien_tich, new { @type = "number", @id = "post_acreage", @name = "dien_tich", @max = "1000", @pattern = "[0-9.]+", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.dien_tich)
                        <div class="input-group-append">
                            <span class="input-group-text">m<sup>2</sup></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.doi_tuong, "Đối tượng cho thuê", new { @class = "col-md-12 control-label" })
                <div class="col-md-6">
                    <div class="input-group mb-3">
                        <select class="form-control" id="post_cat" name="doi_tuong">
                            <option value="Tất cả">-- Tất cả --</option>
                            <option value="Nam">Nam</option>
                            <option value="Nữ">Nữ</option>
                        </select>
                    </div>
                </div>
            </div>
            <div class="form-group row mt-5">
                <div class="col-md-12">
                    <h3>Hình ảnh</h3>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-12">
                    <p>Cập nhật hình ảnh rõ ràng sẽ cho thuê nhanh hơn</p>

                    <div class="js-dropzone" style="width: 100%; height: 300px; border: 2px solid #333"></div>
                    <div class="list_photos row dropzone-previews" id="list-photos-dropzone-previews">
                        @{
                            if (ViewBag.RoomImgs != null)
                            {
                                foreach (RoomImg img in ViewBag.RoomImgs)
                                {
                                    <div class="photo_item col-md-2 col-3 js-photo-manual">
                                        <div class="photo"><img src="@img.folder@img.fileName" alt="@img.fileName" data-dz-thumbnail=""></div>
                                        <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress=""></span></div>
                                        <div class="bottom clearfix">
                                            <span class="photo_name" data-dz-name=""></span>
                                            <span class="photo_delete" data-dz-remove=""><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg> Xóa</span>
                                        </div>
                                        <input type="hidden" class="js-not-temp" name="file_name_list" value="@img.fileName" />
                                    </div>
                                }
                            }
                        }
                    </div>

                    <div id="tpl" style="display:none">
                        <div class="photo_item col-md-2 col-3 js-photo-manual">
                            <div class="photo"><img data-dz-thumbnail=""></div>
                            <div class="dz-progress"><span class="dz-upload" data-dz-uploadprogress=""></span></div>
                            <div class="bottom clearfix">
                                <span class="photo_name" data-dz-name=""></span>
                                <span class="photo_delete" data-dz-remove=""><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2"><polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line></svg> Xóa</span>
                            </div>
                            <!-- <input name="" value="" type="hidden"> -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row mt-5">
                <div class="col-md-12">
                    <input type="submit" class="btn btn-success mb-5 btn-lg btn-block js-btn-hoan-tat" value="Đăng tin">
                </div>
            </div>
        </div>
        @*<div class="col-md-4">
                <div id="maps" style="width:100%; height:300px; margin-bottom: 30px;">
                    <iframe width="100%" height="100%" style="border:0" loading="lazy" allowfullscreen="" src="https://www.google.com/maps/embed/v1/place?key=AIzaSyD6Coia3ssHYuRKJ2nDysWBdSlVlBCzKAw&amp;q=Hồ Chí Minh">
                    </iframe>
                </div>

                <div class="card mb-5" style="color: #856404; background-color: #fff3cd; border-color: #ffeeba;">
                    <div class="card-body">
                        <h4 class="card-title">Lưu ý khi đăng tin</h4>
                        <ul>
                            <li style="list-style-type: square; margin-left: 15px;">Nội dung phải viết bằng tiếng Việt có dấu</li>
                            <li style="list-style-type: square; margin-left: 15px;">Tiêu đề tin không dài quá 100 kí tự</li>
                            <li style="list-style-type: square; margin-left: 15px;">Các bạn nên điền đầy đủ thông tin vào các mục để tin đăng có hiệu quả hơn.</li>
                            <li style="list-style-type: square; margin-left: 15px;">Để tăng độ tin cậy và tin rao được nhiều người quan tâm hơn, hãy sửa vị trí tin rao của bạn trên bản đồ bằng cách kéo icon tới đúng vị trí của tin rao.</li>
                            <li style="list-style-type: square; margin-left: 15px;">Tin đăng có hình ảnh rõ ràng sẽ được xem và gọi gấp nhiều lần so với tin rao không có ảnh. Hãy đăng ảnh để được giao dịch nhanh chóng!</li>
                        </ul>
                    </div>
                </div>

            </div>*@
    </div>
}

@section footer
{
    @*<script src="~/Scripts/js/manage-main.js"></script>*@
    @*<script src="~/Scripts/js/tinh-thanh.js"></script>*@
    <script src="~/Scripts/js/my-js/hoitro.post.js"></script>

    @*<script>
            const listPhotoPreview = document.getElementById('list-photos-dropzone-previews');
            const imgFilesDrop = document.getElementById('img-files-drop');
            const dictImg = {} // ảnh và file

            // hàm tạo elemnt
            const createElement = function (type, props) {
                const $e = document.createElement(type);

                for (var prop in props) {
                    $e.setAttribute(prop, props[prop]);
                }

                return $e;
            }

            function createPhotoItem(srcEncoded, fileName, file) {
                const photoItem = $('<div class="photo_item col-md-2 col-3">');

                // Create the photo element with the encoded source
                const photo = $('<div class="photo">').append($('<img src="' + srcEncoded + '">'));

                // Create the progress bar element (assuming you don't need to modify it)
                const progress = $('<div class="dz-progress"><span class="dz-upload"></span></div>');

                // Create the bottom section with delete button and hidden input
                const bottom = $('<div class="bottom clearfix">');
                const deleteButton = $('<span class="photo_delete" data-dz-remove="">')
                    .append($(`<svg xmlns="http://www.w3.org/2000/svg" width="24"
                                                                    height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
                                                                    stroke-linecap="round" stroke-linejoin="round" class="feather feather-trash-2">
                                                                    <polyline points="3 6 5 6 21 6"></polyline>
                                                                    <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2">
                                                                    </path>
                                                                    <line x1="10" y1="11" x2="10" y2="17"></line>
                                                                    <line x1="14" y1="11" x2="14" y2="17"></line>
                                                                </svg>`)) // SVG code for trash icon
                    .append(' Xóa'); // Text for delete button
                const hiddenInput = createElement('input', { value: fileName, type: 'hidden', 'data-order': file.lastModified });
                hiddenInput.files = new DataTransfer().items.add(file).files;

                // Append all elements to the photo item
                photoItem.append(photo);
                photoItem.append(progress);
                bottom.append(deleteButton);
                bottom.append(hiddenInput);
                photoItem.append(bottom);

                // You can now use the photoItem element as needed
                // (e.g., append it to a container)

                return photoItem;
            }

            // sự kiện khi chon file
            imgFilesDrop.addEventListener('change', function () {
                const files = this.files;
                // console.log(this.files);

                Array.from(files).forEach((file) => {

                    const fileName = file.name;
                    const type = file.type;

                    if (!file) return;

                    console.log(file);
                    dictImg[file.lastModified] = file;
                    const reader = new FileReader();
                    reader.readAsDataURL(file);

                    reader.onload = function (event) {
                        const imgElement = document.createElement("img");
                        imgElement.src = event.target.result;
                        // console.log(event.target);

                        imgElement.onload = function (e) {
                            const canvas = document.createElement('canvas');
                            const ctx = canvas.getContext('2d');

                            // console.log(e.target);

                            // giảm kích thước ảnh thành 120 x 120
                            ctx.drawImage(e.target, 0, 0, 120, 120);

                            // chuyển thành base64 và giảm chất lượng con 0.3
                            const srcEncoded = ctx.canvas.toDataURL(type, 0.5);

                            $(listPhotoPreview).append(createPhotoItem(srcEncoded, fileName, file));
                        };
                    };
                });
            });

            // Láy thứ tự ảnh
            let imgOrder = () => {
                let order = []
                listPhotoPreview.querySelectorAll('input').forEach(i => {
                    order.push(i.getAttribute('data-order'));
                });

                return order;
            }

            // drag and drop
            const dropZone = document.getElementById('test-drop-zone');
            $(document).re
            $('#list-photos-dropzone-previews').sortable({
                helper: 'original',
                cursor: 'move',
            });

            // tạo Đối tượng File từ ảnh đã load từ server
            const imgOrderTemp = imgOrder();
            listPhotoPreview.querySelectorAll('img').forEach((img, i = 0) => {
                fetch(img.src)
                    .then(response => response.blob())
                    .then(blob => {
                        // Tạo đối tượng File từ blob
                        const file = new File([blob], 'image.jpg', { type: 'image/jpeg' });

                        // Sử dụng file như bình thường
                        dictImg[imgOrderTemp[i]] = file;
                        i++;
                        console.log(file);
                    });
            });

            // trước khi post cho server
            document.querySelector('form').addEventListener('submit', (e) => {
                e.preventDefault(); // ngăn post lên server

                // tao list file để gán vào imgFiles.files
                const dataT = new DataTransfer();
                imgOrder().forEach((i) => {
                    dataT.items.add(dictImg[i]);
                });

                //console.log(dataT);
                document.querySelector('#imgFiles').files = dataT.files;

                //document.querySelector('#imgFiles').files = dataT.files;

                e.target.submit();
            });
        </script>*@
}