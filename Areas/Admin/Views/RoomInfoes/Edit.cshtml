@model HoiTroWebsite.Models.RoomInfo

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "RoomInfoes", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form-edit"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>RoomInfo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id)

    <div class="form-group">
        @Html.Label("Tiêu đề", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.brief_description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.brief_description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Chi tiết", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.detail_description)
            @Html.ValidationMessageFor(model => model.detail_description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Giá phòng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Diện tích", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.acreage, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.acreage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Khu vực", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Địa chỉ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Đối tượng cho thuê", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.tenant, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.tenant, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.meta, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.meta, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.meta, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
            }
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Loại phòng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.roomTypeId, (SelectList)ViewBag.RoomType, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.roomTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Người đăng", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.accountId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.accountId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="container">
        <h2>Chỉnh sửa ảnh</h2>
        <form id="editForm" method="post" enctype="multipart/form-data">
            @Html.AntiForgeryToken()
            <table id="image-table" class="table">
                <thead>
                    <tr>
                        <th>Hình ảnh</th>
                        <th>Mô tả</th>
                        <th>Ẩn</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Images != null)
                    {
                        foreach (var image in Model.RoomImages)
                        {
                            <tr id="image-row-@image.id">
                                <td>
                                    <img src="@Url.Content("~/Content/images/" + image.imagePath)" alt="Ảnh" style="width: 100px;" />
                                </td>
                                <td>
                                    <input type="text" name="Images[@image.id].Meta" class="form-control" value="@image.meta" />
                                </td>
                                <td>
                                    <input type="checkbox" name="Images[@image.id].Hide" @(image.hide.GetValueOrDefault(false) ? "checked=\"checked\"" : "") />
                                </td>
                                <td>
                                    <button type="button" class="btn btn-danger" onclick="deleteImageEdit(@image.id)">Xóa</button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <button type="button" class="btn btn-primary" onclick="addImageRowEdit()">Thêm ảnh mới</button>
            <button type="submit" class="btn btn-success" onclick="prepareFormData()">Lưu thay đổi</button>
        </form>
    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}