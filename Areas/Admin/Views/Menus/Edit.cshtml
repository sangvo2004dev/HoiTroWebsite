@model HoiTroWebsite.Models.Menu

<h2>Chỉnh sửa</h2>

@using (Html.BeginForm("Edit", "Menus", FormMethod.Post, new { enctype = "multipart/form-data", @id = "form-edit" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Menu</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.Label("Tên", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => Model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Liên kết", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => Model.link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("meta", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => Model.meta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.meta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Hiển thị", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @{
                    bool hide = (Model.hide.GetValueOrDefault(false) ? true : false);
                }
                @Html.CheckBoxFor(modelItem => hide)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sắp xếp", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(modelItem => Model.order, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(modelItem => Model.order, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("có menu con", htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @{
                    bool hasSubMenu = (Model.hide.GetValueOrDefault(false) ? true : false);
                }
                @Html.CheckBoxFor(modelItem => hasSubMenu)
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu thay đổi" class="btn btn-light" />
            </div>
        </div>
    </div>
}
